CYAN="\033[38;5;14m"
RED="\033[38;5;196m"
BRIGHTGREEN="\033[38;5;10m"
ORANGE="\033[38;5;214m"
LIGHTPURPLE="\033[38;5;13m"
LIGHTBLUE="\033[38;5;38m"
YELLOW="\033[38;5;11m"
UNDERLINED="\e[4m"
BLINK="\e[5m"
BOLD="\e[1m"
RESET="\033[0;00m"
cat << "EOF"
                        |'-'-'|
                         |===|
                         |   |
                         |   |
                         )___(
                        (=====)
                        }====={
EOF
MOTD1="57 65 6c 63 "
MOTD2="6f 6d 65 20 "
MOTD3="62 61 63 6b "
MOTD4="20 33 6e 64 "
MOTD5="47 34 6d 65 21"
printf "${BOLD}${BLINK}${UNDERLINED}${CYAN}$MOTD1${RESET}${BOLD}${BLINK}${UNDERLINED}${RED}$MOTD2${RESET}${BOLD}${BLINK}${UNDERLINED}${BRIGHTGREEN}$MOTD3${RESET}${BOLD}${BLINK}${UNDERLINED}${ORANGE}$MOTD4${RESET}${BOLD}${BLINK}${UNDERLINED}${LIGHTPURPLE}$MOTD5${RESET}"

print_pre_prompt(){
    USERNAME=`whoami`
    HOST=`hostname -s`
    DIR=`pwd`
    PROMPT="$"
    #Tilda if in home directory
    if [ $DIR == $HOME ];
        then
        DIR="~"
    fi
    #Change prompt if you are root user using this config
    if [ $USERNAME == "root" ]
        then
        PROMPT="#"
    fi
    PS1L_NO_COLOR="┌—————$USERNAME@$HOST:$DIR: $PROMPT"
    PS1L="┌—————$CYAN$USERNAME$RESET$RED@$RESET$BRIGHTGREEN$HOST$RESET$ORANGE:$RESET$LIGHTPURPLE$DIR$RESET $LIGHTBLUE$PROMPT$RESET"
    PS1R="[`date +%y-%m-%d` - `date +%H:%M:%S`]"
	printf "\n${PS1L}${RED}%$(($COLUMNS-${#PS1L_NO_COLOR}))s${RESET}" "$PS1R"
}
export PROMPT_COMMAND=print_pre_prompt
export PS1="\n|\n└\[\033[38;5;196m\]>\[$(tput sgr0)\]\[\033[38;5;226m\]>\[$(tput sgr0)\]\[\033[38;5;2m\]>\[$(tput sgr0)\] "
OS=`uname -s`

# ls config
if [ $OS == "Darwin" ];
    then
    export LSCOLORS=Fx
    export CLICOLOR=1
else
    alias ls="ls --color"
    export LS_COLORS="di=1;35"
fi


# fuzzy_history - repeat history
fuzzy_history(){
    echo -n  `history | fzf +s --tac | sed 's/ *[0-9]* *//'`
}

alias fh=fuzzy_history
alias grep="grep -i --color"

# gscripts
alias gscript-shell='docker run -it -v $PWD:/root/share -v $PWD/out:/tmp gen0cide/gscript:v1'
alias gscript-build-linux-all='docker run -it -v $PWD:/root/share -v $PWD/out:/tmp gen0cide/gscript:v1 -e cd linux; gscript compile --obfuscation-level 2 -o /tmp/all /root/share/level*/*.gs'

# upx packer
alias upx-pack='docker run -v $PWD:/data lalyos/upx -k --best --ultra-brute -o ${1}.upx ${1}'

# tmux with logging
alias tmuxl='tmux new -s log_`date +%H_%M_%S` \; send-keys "~/.tmux/plugins/tmux-logging/scripts/toggle_logging.sh" Enter'

# armory2 config
# currently they are the same on either platform, but keeping separate in case platform specific flags need to be specified in the future
if [[ $OS == "Darwin" ]];
    then
    alias armory2='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools"  -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2 '
    alias armory2-shell='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools"  -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2-shell '
    alias armory2-sh='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools"  -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 /bin/bash '
    alias armory2-manage='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools"  -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2-manage '
    alias armory2-web='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools"  -e ARMORY_CONFIG -e DISPLAY -p 8099:8099 -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2-manage runserver 0.0.0.0:8099 '
else
    alias armory2='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools" -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2 '
    alias armory2-shell='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools" -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2-shell '
    alias armory2-sh='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools" -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 /bin/bash '
    alias armory2-manage='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools" -e ARMORY_CONFIG -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2-manage '
    alias armory2-web='docker run -v "$HOME/configs/armory_config:/root/.armory" -v "$PWD:/root/current" -v "$HOME/tools/armory_custom:$HOME/tools/armory_custom" -v "$PWD/armory_data:$PWD/armory_data" -v "$HOME/tools:$HOME/tools" -e ARMORY_CONFIG -e DISPLAY -p 8099:8099 -v /tmp/.X11-unix:/tmp/.X11-unix --rm -it armory2 armory2-manage runserver 0.0.0.0:8099 '
fi
